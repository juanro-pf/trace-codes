{"version":3,"sources":["components/TraceItem.js","App.js","index.js"],"names":["TraceItem","props","uri","method","number","apigee_code","target_code","content","className","style","startsWith","color","backgroundColor","multiple","length","code","i","parseInt","Math","floor","getCode","App","loadFile","a","setXmlFile","blob","URL","createObjectURL","file","axios","get","res","xmlPromise","Promise","resolve","reject","XMLParser","parseFromString","data","xml","useState","setFile","xmlFile","useEffect","display","type","onChange","event","target","files","aria-hidden","requestsList","children","entries","request","point","value","property","name","error","push","key","reverse","showTraceInfo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c38b879.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const TraceItem = props => {\r\n  const { uri, method, number, apigee_code, target_code, content } = props.props;\r\n\r\n  const backgroundColor = () => {\r\n    if(method === 'GET') return { backgroundColor: 'blue' }\r\n    else if(method === 'POST') return { backgroundColor: 'green' }\r\n    else if(method === 'DELETE') return { backgroundColor: 'red' }\r\n    else if(method === 'PUT') return { backgroundColor: 'orange' }\r\n    else if(method === 'OPTIONS') return { backgroundColor: 'yellow' }\r\n  }\r\n\r\n  const numberColor = () => {\r\n    if(apigee_code.startsWith('2')) return {}\r\n    else return { color: 'red' }\r\n  }\r\n\r\n  const getCode = () => {\r\n    if(content === 'NA') return content;\r\n    const multiple = content.length / 10;\r\n    let code = '';\r\n    for(let i = parseInt(0); i < content.length; i= i + multiple){\r\n      code += content[Math.floor(i)];\r\n    }\r\n    return `${content.length}-${code}`;\r\n  }\r\n\r\n  return (\r\n    <div className='trace-item'>\r\n      <div className='trace-item__number'>\r\n        <p>{number}</p>\r\n      </div>\r\n      <div className='trace-item__status-code'>\r\n        <p style={numberColor()}>{apigee_code}</p>\r\n      </div>\r\n      <div className='trace-item__method' style={backgroundColor()}>\r\n        <p>{method}</p>\r\n      </div>\r\n      <div className='trace-item__uri'>\r\n        <p>{uri}</p>\r\n      </div>\r\n      <div className='trace-item__trace-code'>\r\n        <p>{`TC$${apigee_code}$${target_code}$${getCode()}`}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport XMLParser from 'react-xml-parser';\r\nimport { TraceItem } from './components/TraceItem';\r\n\r\nexport const App = () => {\r\n\r\n  const loadFile = async () => {\r\n    setXmlFile('pending');\r\n    const blob= URL.createObjectURL(file);\r\n    const res= await axios.get(blob);\r\n    const xmlPromise = new Promise((resolve, reject) => {\r\n      resolve(new XMLParser().parseFromString(res.data));\r\n    });\r\n    const xml= await xmlPromise;\r\n    setXmlFile(xml);\r\n  };\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [xmlFile, setXmlFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if(file) loadFile();\r\n  }, [file]);\r\n\r\n  const onFileChange = event => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const showTraceInfo = () => {\r\n    if (!xmlFile) return <h1>No trace loaded.</h1>\r\n    else if(xmlFile === 'pending') return <h1>Loading...</h1>\r\n    else {\r\n      const requestsList= [];\r\n      // const length= xmlFile.children[6].children.length;\r\n      let content, apigee_code, target_code;\r\n      for(let [i, request] of xmlFile.children[6].children.entries()){\r\n        content= 'NA';\r\n        apigee_code= 'NA';\r\n        target_code= 'NA';\r\n        // console.log(`it: ${i}`);\r\n        for(let point of request.children[1].children){\r\n          // console.log(1, point);\r\n          try {\r\n            \r\n            if(point.children[0].children[1].children[0].value === 'PROXY_POST_RESP_SENT' && point.children[0].children[1].children[1].value === 'END'){\r\n              for(let property of point.children[1].children){\r\n                // console.log(2, property);\r\n                if(property.name === 'Content'){\r\n                  content= property.value;\r\n                } else if(property.name === 'StatusCode'){\r\n                apigee_code= property.value;\r\n              }\r\n              }\r\n            }\r\n\r\n          } catch (error) {\r\n            \r\n          }\r\n\r\n          try {\r\n            \r\n            if(point.children[0].children[1].children[0].value === 'TARGET_RESP_FLOW' && point.children[0].children[1].children[1].value === 'RESP_START'){\r\n              for(let property of point.children[1].children){\r\n                // console.log(3, property);\r\n                if(property.name === 'StatusCode'){\r\n                target_code= property.value;\r\n              }\r\n              }\r\n            }\r\n            \r\n          } catch (error) {\r\n            \r\n          }\r\n          \r\n        }\r\n        requestsList.push(<TraceItem key={request.children[0].value} props = {{\r\n          uri: request.children[1].children[3].children[1].children[1].value,\r\n          method: request.children[1].children[3].children[1].children[2].value,\r\n          number: i + 1,\r\n          apigee_code,\r\n          target_code,\r\n          content\r\n        }} />);\r\n      }\r\n      return requestsList.reverse();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className= 'app'>\r\n      <label className='app__input' style={ xmlFile === 'pending' ? { display: 'none' } : {} }>\r\n        <input type=\"file\" onChange={onFileChange} />\r\n        <i className='fa fa-file' aria-hidden=\"true\"></i>\r\n        {\r\n          xmlFile ? ' Load new trace' : ' Load trace'\r\n        }\r\n      </label>\r\n      {\r\n        showTraceInfo()\r\n      }\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport './app.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}