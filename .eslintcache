[{"C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\typing-app\\src\\index.js":"1","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\typing-app\\src\\App.js":"2","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\index.js":"3","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\App.js":"4","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\components\\TraceItem.js":"5","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\components\\TroubleshootInfo.js":"6","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\App2.js":"7","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\components\\TraceItem2.js":"8","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\components\\TroubleshootInfo2.js":"9","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\data\\data.js":"10"},{"size":179,"mtime":1608238149359,"results":"11","hashOfConfig":"12"},{"size":122,"mtime":1608239442606,"results":"13","hashOfConfig":"12"},{"size":208,"mtime":1621439712749,"results":"14","hashOfConfig":"15"},{"size":3825,"mtime":1621440033795,"results":"16","hashOfConfig":"17"},{"size":2797,"mtime":1621273373153,"results":"18","hashOfConfig":"17"},{"size":12330,"mtime":1621374288058,"results":"19","hashOfConfig":"17"},{"size":3384,"mtime":1664222446645,"results":"20","hashOfConfig":"15"},{"size":7490,"mtime":1648766447767,"results":"21","hashOfConfig":"15"},{"size":2152,"mtime":1621444101947,"results":"22","hashOfConfig":"17"},{"size":17177,"mtime":1645409083486,"results":"23","hashOfConfig":"15"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sq3lo2",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1vlzuy3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"kl9tj9",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\typing-app\\src\\index.js",[],"C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\typing-app\\src\\App.js",[],"C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\index.js",[],["50","51"],"C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\App.js",["52"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport XMLParser from 'react-xml-parser';\r\nimport { TraceItem } from './components/TraceItem';\r\n\r\nexport const App = () => {\r\n\r\n  const loadFile = async () => {\r\n    setXmlFile('pending');\r\n    const blob= URL.createObjectURL(file);\r\n    const res= await axios.get(blob);\r\n    const xmlPromise = new Promise((resolve, reject) => {\r\n      resolve(new XMLParser().parseFromString(res.data));\r\n    });\r\n    const xml= await xmlPromise;\r\n    setXmlFile(xml);\r\n  };\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [xmlFile, setXmlFile] = useState(null);\r\n  const [activeRequest, setActiveRequest] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if(file) loadFile();\r\n  }, [file]);\r\n\r\n  const onFileChange = event => {\r\n    setActiveRequest(null);\r\n    try {\r\n      if(event.target.files[0].type === 'text/xml'){\r\n        setFile(event.target.files[0]);      \r\n      } else {\r\n        alert('Not an xml file');\r\n      }\r\n    } catch (error) {\r\n      alert('Not an xml file');\r\n    }\r\n  };\r\n\r\n  // const handleClick = traceCode => {\r\n  //   console.log(traceCode);\r\n  // };\r\n\r\n  const showTraceInfo = () => {\r\n    if (!xmlFile) return <h1>No trace loaded.</h1>\r\n    else if(xmlFile === 'pending') return <h1>Loading...</h1>\r\n    else {\r\n      const requestsList= [];\r\n      // const length= xmlFile.children[6].children.length;\r\n      let content, apigee_code, target_code;\r\n      for(let [i, request] of xmlFile.children[6].children.entries()){\r\n        content= 'NA';\r\n        apigee_code= 'NA';\r\n        target_code= 'NA';\r\n        // console.log(`it: ${i}`);\r\n        for(let point of request.children[1].children){\r\n          // console.log(1, point);\r\n          try {\r\n            \r\n            if(point.children[0].children[1].children[0].value === 'PROXY_POST_RESP_SENT' && point.children[0].children[1].children[1].value === 'END'){\r\n              for(let property of point.children[1].children){\r\n                // console.log(2, property);\r\n                if(property.name === 'Content'){\r\n                  content= property.value;\r\n                } else if(property.name === 'StatusCode'){\r\n                apigee_code= property.value;\r\n              }\r\n              }\r\n            }\r\n\r\n          } catch (error) {\r\n            \r\n          }\r\n\r\n          try {\r\n            \r\n            if(point.children[0].children[1].children[0].value === 'TARGET_RESP_FLOW' && point.children[0].children[1].children[1].value === 'RESP_START'){\r\n              for(let property of point.children[1].children){\r\n                // console.log(3, property);\r\n                if(property.name === 'StatusCode'){\r\n                target_code= property.value;\r\n              }\r\n              }\r\n            }\r\n            \r\n          } catch (error) {\r\n            \r\n          }\r\n          \r\n        }\r\n        requestsList.push(<TraceItem key={request.children[0].value} props = {{\r\n          uri: request.children[1].children[3].children[1].children[1].value,\r\n          method: request.children[1].children[3].children[1].children[2].value,\r\n          number: i + 1,\r\n          apigee_code,\r\n          target_code,\r\n          content\r\n        }}  activeRequest={activeRequest} setActiveRequest={setActiveRequest} />);\r\n        // }} onClickTraceItem={handleClick} />);\r\n      }\r\n      return requestsList.reverse();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className= 'app'>\r\n      <label className='app__input' style={ xmlFile === 'pending' ? { display: 'none' } : {} }>\r\n        <input type=\"file\" onChange={onFileChange} accept='.xml'/>\r\n        <i className='fa fa-file' aria-hidden=\"true\"></i>\r\n        {\r\n          xmlFile ? ' Load new trace' : ' Load trace'\r\n        }\r\n      </label>\r\n      {\r\n        showTraceInfo()\r\n      }\r\n    </div>\r\n  );\r\n};",["53","54"],"C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\components\\TraceItem.js",["55"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { TroubleshootInfo } from './TroubleshootInfo';\r\n\r\nexport const TraceItem = props => {\r\n  \r\n  const { uri, method, number, apigee_code, target_code, content } = props.props;\r\n  const { setActiveRequest, activeRequest } = props;\r\n  \r\n  const backgroundColor = () => {\r\n    if(method === 'GET') return { backgroundColor: 'blue' }\r\n    else if(method === 'POST') return { backgroundColor: 'green' }\r\n    else if(method === 'DELETE') return { backgroundColor: 'red' }\r\n    else if(method === 'PUT') return { backgroundColor: 'orange' }\r\n    else if(method === 'OPTIONS') return { backgroundColor: 'yellow' }\r\n  }\r\n  \r\n  const numberColor = () => {\r\n    if(apigee_code.startsWith('2')) return {}\r\n    else return { color: 'red' }\r\n  }\r\n  \r\n  const getTenDigitCode = () => {\r\n    if(content === 'NA') return content;\r\n    const multiple = content.length / 10;\r\n    let code = '';\r\n    for(let i = parseInt(0); i < content.length; i= i + multiple){\r\n      code += content[Math.floor(i)];\r\n    }\r\n    return `${content.length}-${code}`;\r\n  }\r\n  \r\n  const getTraceCode = () => {\r\n    return `TC$${apigee_code}$${target_code}$${getTenDigitCode()}`;\r\n  }\r\n  \r\n  // const [traceCode, setTraceCode] = useState(getTraceCode());\r\n  const [traceCode] = useState(getTraceCode());\r\n  // const [showTroubleshootInfo, setShowTroubleshootInfo] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   if(number === activeRequest) setShowTroubleshootInfo(true);\r\n  //   else setShowTroubleshootInfo(false);\r\n  // }, [activeRequest, number]);\r\n\r\n  const handleClick = () => {\r\n    // console.log(number, activeRequest);\r\n    if(number === activeRequest) setActiveRequest(() => null);\r\n    else setActiveRequest(() => number);\r\n  };\r\n\r\n  return (\r\n    // <div className='trace-item' onClick={() => onClickTraceItem(traceCode)} >\r\n    <div>\r\n      {/* <div className='trace-item' onClick={() => setShowTroubleshootInfo(prev => !prev)} > */}\r\n      <div className='trace-item' onClick={handleClick} >\r\n        <div className='trace-item__number'>\r\n          <p>{number}</p>\r\n        </div>\r\n        <div className='trace-item__status-code'>\r\n          <p style={numberColor()}>{apigee_code}</p>\r\n        </div>\r\n        <div className='trace-item__method' style={backgroundColor()}>\r\n          <p>{method}</p>\r\n        </div>\r\n        <div className='trace-item__uri'>\r\n          <p>{uri}</p>\r\n        </div>\r\n        <div className='trace-item__trace-code'>\r\n          <p>{traceCode}</p>\r\n        </div>\r\n      </div>\r\n      {\r\n        number === activeRequest && <TroubleshootInfo traceCode={traceCode}/>\r\n      }\r\n      {/* <TroubleshootInfo show={showTroubleshootInfo} traceCode={traceCode}/> */}\r\n    </div>\r\n  )\r\n};","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\components\\TroubleshootInfo.js",["56","57"],"import React from 'react';\r\n\r\n// const errorsInfo= [\r\n//   ['Please contact #apigee slack channel or send an email to ApigeeDevOps@t-mobile.com so they can check further, please include the trace in the message.'],\r\n//   []\r\n// ];\r\n\r\nconst troubleshootInfo= {\r\n  'TC$401$NA$113-{{gdeMnsoi}': 'You are facing issue #3 of this documentation https://devcenter.t-mobile.com/documents/5f4d57225de3720007bb76ca',\r\n  'TC$401$NA$162-{Ioscei/a/}': 'You are facing issue #3 of this documentation https://devcenter.t-mobile.com/documents/5f4d57225de3720007bb76ca',\r\n  'TC$401$NA$123-{eeAes:nci}': 'Access token expired - NO DOC YET',\r\n  'TC$401$NA$162-{Aiskei/a/}': 'Access token expired - NO DOC YET',\r\n  'TC$400$NA$190-{uiero*\"rs': 'Please check this documentation to troubleshoot this issue https://devcenter.t-mobile.com/documents/5fc9168ac4d2dc0007042432?name=POP-TOKEN-FAILURE-TROUBLESHOOT',\r\n  'TC$400$NA$141-{s-:TMtnec}': 'Please check this documentation to troubleshoot this issue https://devcenter.t-mobile.com/documents/5fc9168ac4d2dc0007042432?name=POP-TOKEN-FAILURE-TROUBLESHOOT',\r\n  'TC$503$NA$136-{uetatcnti}': 'The Service is temporarily unavailable - NO DOC YET',\r\n  'TC$502$NA$128-{aUF\"rso.F}': 'Unexpected EOF at target - NO DOC YET',\r\n  'TC$500$NA$140-{:vsIr\"asr': 'Internal Server Error - NO DOC YET',\r\n  'TC$403$NA$190-{ave R*\"rs': 'You are facing issue #1 of this documentation https://devcenter.t-mobile.com/documents/5f4d57225de3720007bb76ca',\r\n  'TC$504$NA$112-{f\"Teospfy': 'Gateway Timeout - NO DOC YET',\r\n  'TC$401$NA$152-{\"ygI*ndi#': 'You are facing issue #2 of this documentation https://devcenter.t-mobile.com/documents/5f4d57225de3720007bb76ca',\r\n  'backend': 'Response is coming directly from the backend, please contact proxy owners to check further',\r\n  'other': 'Please contact #apigee slack channel or send an email to ApigeeDevOps@t-mobile.com so they can check further, please include the trace in the message.'\r\n};\r\n\r\nconst completeTroubleshootInfo = [\r\n  {\r\n    traceCodes: ['backend'],\r\n    description: 'Backend response',\r\n    header: 'Response is coming directly from the backend',\r\n    steps: [\r\n      'Please contact proxy owners so they can check further.'\r\n    ]\r\n  },\r\n  {\r\n    traceCodes: ['other'],\r\n    description: 'Unknown issue',\r\n    header: 'Unknown issue',\r\n    steps: [\r\n      'Please contact <link>link1<link> or <link>link2<link> slack channel so we can check further.'\r\n    ],\r\n    links: {\r\n      'link1': {\r\n        displayText: 'ApigeeCM@T-Mobile.com',\r\n        url: 'mailto:ApigeeCM@T-Mobile.com'\r\n      },\r\n      'link2': {\r\n        displayText: '#apigee',\r\n        url: 'https://app.slack.com/client/T02KY506W/C4SAFRARJ'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    traceCodes: ['TC$401$NA$162-{Ioscei/a/}'],\r\n    description: 'Invalid Access Token',\r\n    header: 'Token usually was requested from a different organization.',\r\n    steps: [\r\n      '1. Go to <link>link1<link>',\r\n      '2. Search your application (client invoking Apigee) using the name or AKMID',\r\n      '3. Choose the Planet (OnPrem/Saas) & exact Environment (qatlab, ditlab, tmobileqat, tmobiledit, etc) you are trying to hit',\r\n      '4. Get the Credentials – Client Id/ Key & Secret (make sure no leading or trailing spaces)',\r\n      '5. Use the credentials to generate a token',\r\n      '6. To compare with what is being currently used, Open <link>link2<link> site & Paste your current Authorization token',\r\n      '7. In the decode panel, note down the value of “aud” field (audience)',\r\n      '8. The “aud” field (audience) should be same as Client Id'\r\n    ],\r\n    links: {\r\n      'link1': {\r\n        displayText: 'ABOARD UI',\r\n        url: 'https://aboardui.apps.px-prd04.cf.t-mobile.com/'\r\n      },\r\n      'link2': {\r\n        displayText: 'jwt.io',\r\n        url: 'https://jwt.io/'\r\n      },\r\n    }\r\n  },\r\n  {\r\n    traceCodes: ['TC$401$NA$123-{eeAes:nci}', 'TC$401$NA$162-{Aiskei/a/}'],\r\n    description: 'Access token expired',\r\n    header: 'Access token sent has already expired',\r\n    steps: [\r\n      'Access token is valid for 1 hour',\r\n      'Send a fresh generated access token in the request and try again'\r\n    ]\r\n  },\r\n  {\r\n    traceCodes: ['TC$503$NA$136-{uetatcnti}'],\r\n    description: 'The Service is temporarily unavailable',\r\n    header: 'The backend server is temporarily unavailable',\r\n    steps: [\r\n      'Please contact proxy owners so they can check further'\r\n    ]\r\n  },\r\n  {\r\n    traceCodes: ['TC$502$NA$128-{aUF\"rso.F}'],\r\n    description: 'Unexpected EOF at target',\r\n    header: 'The backend server might be sending EOF abruptly',\r\n    steps: [\r\n      'Please contact proxy owners so they can check further'\r\n    ]\r\n  },\r\n  {\r\n    traceCodes: ['TC$400$NA$190-{uiero*\"rs', 'TC$400$NA$141-{s-:TMtnec}'],\r\n    description: 'X-Authorization: Invalid PoP Token',\r\n    header: 'Something is wrong with the pop token sent',\r\n    steps: [\r\n      'Please check our documentation to troubleshoot this issue <link>https://devcenter.t-mobile.com/documents/5fc9168ac4d2dc0007042432?name=POP-TOKEN-FAILURE-TROUBLESHOOT<link>'\r\n    ]\r\n  },\r\n  {\r\n    traceCodes: ['TC$500$NA$140-{:vsIr\"asr'],\r\n    description: 'Internal Server Error',\r\n    header: 'Internal Server Error at apigee side',\r\n    steps: [\r\n      'Please contact <link>link1<link> or <link>link2<link> slack channel so we can check further'\r\n    ],\r\n    links: {\r\n      'link1': {\r\n        displayText: 'ApigeeCM@T-Mobile.com',\r\n        url: 'mailto:ApigeeCM@T-Mobile.com'\r\n      },\r\n      'link2': {\r\n        displayText: '#apigee',\r\n        url: 'https://app.slack.com/client/T02KY506W/C4SAFRARJ'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    traceCodes: ['TC$403$NA$190-{ave R*\"rs'],\r\n    description: 'Invalid Api Key For Given Resource',\r\n    header: 'The proxy is not added to the product',\r\n    steps: [\r\n      '1. Identify the name of the proxy corresponding to the API you are hitting (use <link>link1<link> if you are not sure)',\r\n      '2. Go to <link>link2<link>',\r\n      '3. Search your application using the name or AKMID',\r\n      '4. Choose the Planet (OnPrem/Saas) & exact Environment (qatlab, ditlab, tmobileqat, tmobiledit, etc) you are trying to hit',\r\n      '5. Click on the Product. All the Proxies in this product is shown below',\r\n      '6. If the proxy is not present, the API Consumer team has to add it to their Product / DevApp',\r\n      '7. This can be done by clicking on “+Add Proxies” button',\r\n      '8. The request will be sent to API Publisher',\r\n      '9. Only API Publisher team can approve',\r\n      '10. Once approved and added, please test again',\r\n      '11. If the proxy is Present in step# 6, please contact <link>link3<link> or <link>link4<link> slack channel so we can check further',\r\n    ],\r\n    links: {\r\n      'link1': {\r\n        displayText: 'API Explorer',\r\n        url: 'https://devcenter.t-mobile.com/documents/5f4d759850023a0008ce7a0e'\r\n      },\r\n      'link2': {\r\n        displayText: 'ABOARD UI',\r\n        url: 'https://aboardui.apps.px-prd04.cf.t-mobile.com/'\r\n      },\r\n      'link3': {\r\n        displayText: 'ApigeeCM@T-Mobile.com',\r\n        url: 'mailto:ApigeeCM@T-Mobile.com'\r\n      },\r\n      'link4': {\r\n        displayText: '#apigee',\r\n        url: 'https://app.slack.com/client/T02KY506W/C4SAFRARJ'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    traceCodes: ['TC$504$NA$112-{f\"Teospfy'],\r\n    description: 'Gateway Timeout',\r\n    header: 'Backend is returning a 504 response or taking too long to respond',\r\n    steps: [\r\n      'Please contact proxy owners so they can check further'\r\n    ]\r\n  },\r\n  {\r\n    traceCodes: ['TC$401$NA$152-{\"ygI*ndi#'],\r\n    description: 'Invalid API Key',\r\n    header: 'Wrong credentials are being used to generate accesstoken',\r\n    steps: [\r\n      '1. Go to <link>link1<link>',\r\n      '2. Search your application using the name or AKMID',\r\n      '3. Choose the Planet (OnPrem/Saas) & exact Environment (qatlab, ditlab, tmobileqat, tmobiledit, etc) you are trying to hit',\r\n      '4. Get the Credentials – Client Id/ Key & Secret (make sure no leading or trailing spaces)',\r\n      '5. Use the credentials to generate a token',\r\n      '6. If this is for PROD, please reach out to the Owner (Manager or Sr Manager) or the Director of this App & they can get the credentials for you',\r\n      '7. Reach out to <link>link2<link> or <link>link3<link> slack channel if the API Publisher / Manager / Director is on PTO or they are having issue with retrieving the value in Aboard. ApigeeDevOps team can share the values with team members reporting to the same Director'\r\n    ],\r\n    links: {\r\n      'link1': {\r\n        displayText: 'ABOARD UI',\r\n        url: 'https://aboardui.apps.px-prd04.cf.t-mobile.com/'\r\n      },\r\n      'link2': {\r\n        displayText: 'ApigeeDevOps@T-Mobile.com',\r\n        url: 'mailto:ApigeeDevOps@T-Mobile.com'\r\n      },\r\n      'link3': {\r\n        displayText: '#apigee',\r\n        url: 'https://app.slack.com/client/T02KY506W/C4SAFRARJ'\r\n      }\r\n    }\r\n  },\r\n  {\r\n    traceCodes: ['Not yet'],\r\n    description: 'Requested Resource or Method is not allowed',\r\n    header: 'Call is made to a non-existent method',\r\n    steps: [\r\n      '1. Go to <link>link1<link> and search with the path (example – anything after .com --> endpoint: https://qat02.api.t-mobile.com/commerce/v3/orders/order-id --> path: /commerce/v3/orders/order-id) <<link>link2<link>>',\r\n      '2. Confirm if an API exists with this path',\r\n      '3. If present, please confirm you are using the right method (GET,POST,PUT,etc) as displayed in API-Explorer',\r\n      '4. If API is not present, please double check the endpoint – please reach out to the team who provided this endpoint',\r\n      '5. If API is present but method is not present, please reach out to API Publisher team (check contacts section in the <link>link1<link> tool)',\r\n      '6. ApigeeCM team cannot add a new method to any proxy'\r\n    ],\r\n    links: {\r\n      'link1': {\r\n        displayText: 'API Explorer',\r\n        url: 'https://api-explorer.devcenter.t-mobile.com'\r\n      },\r\n      'link2': {\r\n        displayText: 'How to use API Explorer',\r\n        url: 'https://devcenter.t-mobile.com/documents/5f4d759850023a0008ce7a0e'\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\nexport const TroubleshootInfo = props => {\r\n\r\n  const { show, traceCode } = props;\r\n\r\n  // const getStyle= () => {\r\n  //   if(!show) return { display: 'none' }\r\n  //   else return {}\r\n  // };\r\n\r\n  const showTroubleshootInfo= () => {\r\n    if(traceCode.split('$')[2] !== 'NA') return <p>{`${traceCode.split('$')[2]} ${troubleshootInfo['backend']}`}</p>;\r\n    else if(troubleshootInfo[traceCode]) return <p>{troubleshootInfo[traceCode]}</p>;\r\n    else return <p>{troubleshootInfo['other']}</p>;\r\n  };\r\n\r\n  const showCompleteTroubleshootInfo= () => {\r\n    if(traceCode.split('$')[2] !== 'NA') return getData(completeTroubleshootInfo[0]);\r\n    for(const error of completeTroubleshootInfo){\r\n      if(error.traceCodes.includes(traceCode)) return getData(error);\r\n    }\r\n    return getData(completeTroubleshootInfo[1]);\r\n  };\r\n\r\n  const getData = errorTroubleshootData => {\r\n    const identifier= '<link>';\r\n    const completeTroubleshootTags= [];\r\n    completeTroubleshootTags.push(<p className='trace-item__troubleshoot-info--header'>{errorTroubleshootData.header}</p>);\r\n    for(const step of errorTroubleshootData.steps){\r\n      if(step.includes(identifier)){\r\n        const parts= step.split(identifier);\r\n        const stepParts= [];\r\n        for(const [i, part] of parts.entries()){\r\n          if(i%2 === 0){\r\n            stepParts.push(part);\r\n          } else{\r\n            stepParts.push(\r\n              <a key={i} href={ errorTroubleshootData.links[part].url } rel=\"noopener noreferrer\" target=\"_blank\">\r\n                { errorTroubleshootData.links[part].displayText }\r\n              </a>\r\n            );\r\n          }\r\n        }\r\n        completeTroubleshootTags.push(<p>{ stepParts }</p>);\r\n      } else completeTroubleshootTags.push(<p>{step}</p>);\r\n    }\r\n    return completeTroubleshootTags;\r\n  };\r\n\r\n  return (\r\n    // <div className='troubleshoot-info' style={ getStyle() }>\r\n    // <div className='animate__animated animate__fadeIn animate__faster trace-item__troubleshoot-info'>\r\n    <div className='trace-item__troubleshoot-info'>\r\n      {/* {showTroubleshootInfo()} */}\r\n      {showCompleteTroubleshootInfo()}\r\n    </div>\r\n  )\r\n};","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\App2.js",["58"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport XMLParser from 'react-xml-parser';\r\n// import { TraceItem } from './components/TraceItem';\r\nimport { TraceItem } from './components/TraceItem2';\r\n\r\nexport const App = () => {\r\n\r\n  const loadFile = async () => {\r\n    setXmlFile('pending');\r\n    const blob= URL.createObjectURL(file);\r\n    const res= await axios.get(blob);\r\n    const xmlPromise = new Promise((resolve, reject) => {\r\n      resolve(new XMLParser().parseFromString(res.data));\r\n    });\r\n    const xml= await xmlPromise;\r\n    setXmlFile(xml);\r\n  };\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [xmlFile, setXmlFile] = useState(null);\r\n  // const [activeRequest, setActiveRequest] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if(file) loadFile();\r\n  }, [file]);\r\n\r\n  const onFileChange = event => {\r\n    // setActiveRequest(null);\r\n    try {\r\n      if(event.target.files[0].type === 'text/xml'){\r\n        setFile(event.target.files[0]);\r\n      } else {\r\n        alert('Not an xml file');\r\n      }\r\n    } catch (error) {\r\n      alert('Not an xml file');\r\n    }\r\n  };\r\n\r\n  const showTraceInfo = () => {\r\n    if (!xmlFile) return (\r\n      <div>\r\n        <h1>No trace loaded.</h1>\r\n        <div className='app__first-time-info'>\r\n          <h2>First time using this app? Follow below steps:</h2>\r\n          <ol>\r\n            <li>{'Run a trace for the proxy on which you are facing the error, check this documentation on '}\r\n              <a href='https://devcenter.t-mobile.com/documents/5fc9819faf648f000780668c' rel=\"noopener noreferrer\" target=\"_blank\">\r\n                how to run an apigee trace\r\n              </a> in case this is the first time you run a trace.\r\n            </li>\r\n            <li>Download the trace.</li>\r\n            <li>Click on the \"Load trace\" button at the top of this page and select the trace that you just downloaded.</li>\r\n            <li>Wait for the trace information to load.</li>\r\n            <li>Click on the request that contains the error to see the troubleshoot steps for the issue that you are facing.</li>\r\n            <li>{'In case you are facing any issue with the tool, please reach out to '}\r\n              <a href='https://app.slack.com/client/T02KY506W/C4SAFRARJ' rel=\"noopener noreferrer\" target=\"_blank\">\r\n                #apigee\r\n              </a> slack channel with a screenshot of the issue.\r\n            </li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n    else if(xmlFile === 'pending') return <h1>Loading...</h1>\r\n    else {\r\n      const requestsList= [];\r\n      for(let [i, request] of xmlFile.children[6].children.entries()){\r\n        requestsList.push(<TraceItem key={request.children[0].value}\r\n        req={request.children[1].children}\r\n        requestNumber={ i + 1 } />);\r\n        // activeRequest={activeRequest}\r\n        // setActiveRequest={setActiveRequest} />);\r\n      }\r\n      return requestsList.reverse();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className= 'app'>\r\n      <label className='app__input' style={ xmlFile === 'pending' ? { display: 'none' } : {} }>\r\n        <input type=\"file\" onChange={onFileChange} accept='.xml'/>\r\n        <i className='fa fa-file' aria-hidden=\"true\"></i>\r\n        {\r\n          xmlFile ? ' Load new trace' : ' Load trace'\r\n        }\r\n      </label>\r\n      {\r\n        showTraceInfo()\r\n      }\r\n    </div>\r\n  );\r\n};","C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\components\\TraceItem2.js",[],"C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\components\\TroubleshootInfo2.js",["59"],"C:\\Users\\Juan Ponce\\Desktop\\MERN\\React\\trace-app\\src\\data\\data.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":25,"column":6,"nodeType":"66","endLine":25,"endColumn":12,"suggestions":"67"},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":19},{"ruleId":"70","severity":1,"message":"74","line":227,"column":11,"nodeType":"72","messageId":"73","endLine":227,"endColumn":15},{"ruleId":"70","severity":1,"message":"75","line":234,"column":9,"nodeType":"72","messageId":"73","endLine":234,"endColumn":29},{"ruleId":"64","severity":1,"message":"65","line":26,"column":6,"nodeType":"66","endLine":26,"endColumn":12,"suggestions":"76"},{"ruleId":"70","severity":1,"message":"75","line":8,"column":9,"nodeType":"72","messageId":"73","endLine":8,"endColumn":29},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadFile'. Either include it or remove the dependency array.","ArrayExpression",["79"],["77"],["78"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'show' is assigned a value but never used.","'showTroubleshootInfo' is assigned a value but never used.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"81","fix":"83"},"Update the dependencies array to be: [file, loadFile]",{"range":"84","text":"85"},{"range":"86","text":"85"},[752,758],"[file, loadFile]",[812,818]]